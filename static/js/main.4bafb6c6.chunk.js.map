{"version":3,"sources":["assets/svg/loading.svg","assets/svg/user-profile.svg","assets/svg/bitcoin-logo.svg","assets/svg/bitcoin.svg","assets/svg/go-back.svg","assets/svg/add-friend.svg","assets/svg/send.svg","assets/svg/pen.svg","assets/svg/bin.svg","assets/svg/bitcoin-menu.svg","assets/svg/homepage.svg","assets/svg/user.svg","assets/svg/line-chart.svg","assets/svg/log-in.svg","assets/svg/menu.svg","services/StorageService.js","services/UserService.js","services/BitcoinService.js","cmps/MovePreview.jsx","cmps/ChartForMoves.jsx","cmps/MovesList.jsx","pages/HomePage.jsx","services/UtilService.js","services/ContactService.js","cmps/ContactPreview.jsx","cmps/ContactList.jsx","cmps/ContactFilter.jsx","pages/ContactPage.jsx","cmps/TransferFund.jsx","pages/ContactDetailsPage.jsx","cmps/Input.jsx","pages/ContactEditPage.jsx","cmps/MyChart.jsx","pages/StatisticPage.jsx","pages/SignupPage.jsx","cmps/NavBar.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","StorageService","load","key","val","localStorage","getItem","JSON","parse","store","stringify","getUser","UserService","signUp","name","user","coins","moves","addMove","contact","amount","move","toId","_id","to","at","Date","now","unshift","a","rate","axios","get","res","data","timespan","marketPrice","tradeVolume","avgBlockSize","nTransactions","BitcoinService","getRate","getMarketPrice","getTradeVolume","getAvgBlockSize","getNTransactions","props","title","className","src","require","alt","formatUSD","fromNow","ChartForMoves","this","allMoves","refProp","map","type","label","loader","ref","width","height","chartType","options","hAxis","vAxis","animation","startup","easing","duration","rootProps","Component","length","index","MovePreview","HomePage","state","setState","window","scrollTo","history","push","USD","Intl","NumberFormat","style","currency","splice","format","toFixed","MovesList","getRandomInt","min","max","Math","ceil","floor","random","_getRandChar","LETTERS","randIndex","parseInt","charAt","_createWord","word","URLSearchParams","location","search","UtilService","makeLorem","randStr","substring","toUpperCase","substr","makeId","text","possible","i","getParameterByName","url","href","replace","results","RegExp","exec","decodeURIComponent","sort","arr","b","toLocaleLowerCase","CONTACTS_DB","filter","term","contacts","includes","phone","email","ContactService","getContacts","filterBy","Promise","resolve","reject","contactsToReturn","getContactById","id","find","removeContact","findIndex","saveContact","c","_updateContact","_addContact","getEmptyContact","ContactPreview","onError","e","target","onerror","ContactList","ContactFilter","onChangeHandler","ev","value","onFilter","placeholder","onChange","ContactPage","loadContacts","onFilterHandler","prevState","TransferFund","maxCoins","setAmount","console","log","onClick","onTransferCoins","ContactDetailsPage","myRef","current","offsetTop","offsetHeight","React","createRef","match","params","formatter","Input","onInput","ContactEditPage","onInputHandler","_","onRemoveContantHandler","onGoBack","go","MyChart","color","description","values","x","y","titleTextStyle","fontSize","unit","colors","StatisticPage","SignupPage","setName","event","handleKeyPress","required","onKeyPress","NavBar","isOpen","isOnLine","setId","handleClick","toogleMemu","handlePress","keyCode","setTimeout","document","body","classList","toggle","navigator","onLine","addEventListener","removeEventListener","openMenu","offLine","activeClassName","exact","createBrowserHistory","App","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","prompt"],"mappings":"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","file":"static/js/main.4bafb6c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.772a34ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-profile.0572a77f.svg\";","module.exports = __webpack_public_path__ + \"static/media/bitcoin-logo.fe0aee18.svg\";","module.exports = __webpack_public_path__ + \"static/media/bitcoin.8a47121e.svg\";","module.exports = __webpack_public_path__ + \"static/media/go-back.d79c9bba.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-friend.b87db7b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.8f1410b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.9b27cd33.svg\";","module.exports = __webpack_public_path__ + \"static/media/bin.94e3636b.svg\";","module.exports = __webpack_public_path__ + \"static/media/bitcoin-menu.6cc74b28.svg\";","module.exports = __webpack_public_path__ + \"static/media/homepage.b0b63901.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.0efa1f2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/line-chart.4286fb8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/log-in.b9ed2e38.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.363a82dc.svg\";","function load(key) {\r\n    var val = localStorage.getItem(key)\r\n    return (val)? JSON.parse(val) : null;\r\n}\r\n\r\nfunction store(key, val) {\r\n    localStorage[key] = JSON.stringify(val);\r\n    // return JSON.parse(val)\r\n}\r\n\r\n\r\nexport const StorageService = {\r\n    load,\r\n    store\r\n\r\n}","import { StorageService } from './StorageService'\r\nconst KEY_USER = 'user'\r\n\r\nfunction getUser() {\r\n    return StorageService.load(KEY_USER)\r\n}\r\n\r\nfunction signUp(name) {\r\n    var user = {\r\n        name,\r\n        coins: 100,\r\n        moves: []\r\n    }\r\n    StorageService.store(KEY_USER, user)\r\n    return user\r\n}\r\n\r\nfunction addMove(contact, amount) {\r\n    const user = getUser()\r\n    user.coins -= amount\r\n    const move = {\r\n        toId: contact._id,\r\n        to: contact.name,\r\n        at: Date.now(),\r\n        amount\r\n    }\r\n    user.moves.unshift(move)\r\n    StorageService.store(KEY_USER, user)\r\n    return user\r\n}\r\n\r\nconst move = {\r\n    toId: \"d99e3u2ih329\",\r\n    to: \"Moshiko\",\r\n    at: 2652712571,\r\n    amount: 2\r\n}\r\n\r\n\r\nexport const UserService = {\r\n    getUser,\r\n    signUp,\r\n    addMove\r\n}","import axios from \"axios\";\r\nimport { StorageService } from './StorageService'\r\n\r\nconst KEY_RATE = 'rate'\r\nconst KEY_MARKET_PRICE = 'marketPrice'\r\nconst KEY_N_TRANSACTIONS = 'n-transactions'\r\nconst KEY_TRADE_VULUME = 'tradeVolume'\r\nconst KEY_AVG_BLOCK_SIZE = 'avgBlockSize'\r\n\r\nasync function getRate(coins) {\r\n    var rate = StorageService.load(KEY_RATE)\r\n    if (!rate) {\r\n        const res = await axios.get(`https://blockchain.info/tobtc?currency=USD&value=1`)\r\n        rate = res.data\r\n        StorageService.store(KEY_RATE, rate)\r\n    }\r\n    return rate\r\n}\r\nasync function getMarketPrice(timespan = '5months') {\r\n    var marketPrice = StorageService.load(KEY_MARKET_PRICE)\r\n    if (!marketPrice) {\r\n        const res = await axios.get(`https://api.blockchain.info/charts/market-price?timespan=${timespan}&format=json&cors=true`)\r\n        marketPrice = res.data\r\n        StorageService.store(KEY_MARKET_PRICE, marketPrice)\r\n    }\r\n    return marketPrice\r\n}\r\n\r\nasync function getTradeVolume(timespan = '5months') {\r\n    var tradeVolume = StorageService.load(KEY_TRADE_VULUME)\r\n    if (!tradeVolume) {\r\n        const res = await axios.get(`https://api.blockchain.info/charts/trade-volume?timespan=${timespan}&format=json&cors=true`)\r\n        tradeVolume = res.data\r\n        StorageService.store(KEY_TRADE_VULUME, tradeVolume)\r\n    }\r\n    return tradeVolume\r\n}\r\n\r\nasync function getAvgBlockSize(timespan = '5months') {\r\n    var avgBlockSize = StorageService.load(KEY_AVG_BLOCK_SIZE)\r\n    if (!avgBlockSize) {\r\n        const res = await axios.get(`https://api.blockchain.info/charts/avg-block-size?timespan=${timespan}&format=json&cors=true`)\r\n        avgBlockSize = res.data\r\n        StorageService.store(KEY_AVG_BLOCK_SIZE, avgBlockSize)\r\n    }\r\n\r\n    return avgBlockSize\r\n}\r\nasync function getNTransactions(timespan = '5months') {\r\n    var nTransactions = StorageService.load(KEY_N_TRANSACTIONS)\r\n    if (!nTransactions) {\r\n        const res = await axios.get(`https://api.blockchain.info/charts/n-transactions?timespan=${timespan}&format=json&cors=true`)\r\n        nTransactions = res.data\r\n        StorageService.store(KEY_N_TRANSACTIONS, nTransactions)\r\n    }\r\n\r\n    return nTransactions\r\n}\r\n\r\nasync function getStatistics(type, timespan = '5months') {\r\n    var statistics = StorageService.load(type)\r\n    if (!statistics) {\r\n        const res = await axios.get(`https://api.blockchain.info/charts/${type}?timespan=${timespan}&format=json&cors=true`)\r\n        statistics = {\r\n            description: res.data.description,\r\n            data: res.data.values.map(value => {\r\n                return [new Date(value.x * 1000), value.y];\r\n            }),\r\n            hAxis: {\r\n                title: `time ${timespan = '5months'}`,\r\n                titleTextStyle: { fontSize: 18 }\r\n            },\r\n            vAxis: {\r\n                title: res.data.name,\r\n                titleTextStyle: { fontSize: 18 }\r\n            }\r\n        }\r\n        statistics.data.unshift([{ type: 'date', label: 'Time' },\r\n        res.data.unit])\r\n        StorageService.store(type, statistics)\r\n    } \r\n    return statistics\r\n}\r\n\r\nexport const BitcoinService = {\r\n    getRate,\r\n    getMarketPrice,\r\n    getTradeVolume,\r\n    getAvgBlockSize,\r\n    getNTransactions,\r\n    // getStatistics\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div>\r\n           {props.title ? <h3><span className=\"text-light\">To:</span> <Link to={'/contact/' + props.move.toId} key={props.move.toId}> {props.move.to}</Link></h3> : ''}\r\n            {/* {props.title ? <h3><span className=\"text-light\">To:</span> {props.move.to}</h3> : ''} */}\r\n            <h3 className=\"flex\">\r\n                <span className=\"number flex\">\r\n                    <img className=\"bitcoin-currency\" \r\n                         src={require('../assets/svg/bitcoin-logo.svg')} \r\n                         alt=\"B\"/>{props.move.amount}\r\n                </span> \r\n                <span className=\"text-light\">|</span>\r\n                {props.move.formatUSD}\r\n            </h3>\r\n            <h3 ><span className=\"text-light\">At:</span> <Moment fromNow>{props.move.at}</Moment></h3>\r\n        </div>\r\n    );\r\n\r\n};\r\n","import React, { Component } from 'react'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nexport default class ChartForMoves extends Component {\r\n    render() {\r\n        const { allMoves, refProp } = this.props\r\n        var data = allMoves.map(move => [new Date(move.at), +move.amount])\r\n        data.unshift([{ type: 'date', label: 'Time' }, 'amount'])\r\n        var title = 'Moves Statistics'\r\n        var hAxis = {\r\n            title: `Time`,\r\n        }\r\n        var vAxis = {\r\n            title: 'Money transfers',\r\n        }\r\n        const loader = <img src={require('../assets/svg/loading.svg')} alt=\"Loading\" />\r\n        return (\r\n            <div ref={refProp}>\r\n                <Chart\r\n                    className=\"chart\"\r\n                    width={'100%'}\r\n                    height={'400px'}\r\n                    chartType=\"AreaChart\"\r\n                    loader={loader}\r\n                    data={data}\r\n                    options={{\r\n                        title,\r\n                        hAxis,\r\n                        vAxis,\r\n                        // legend: \"none\",\r\n                        animation: {\r\n                            startup: true,\r\n                            easing: 'linear',\r\n                            duration: 1500,\r\n                        },\r\n                    }}\r\n                    rootProps={{ 'data-testid': '1' }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport MovePreview from './MovePreview'\r\nimport ChartForMoves from './ChartForMoves';\r\n\r\n// function MovesList(moves) {\r\n//     return (\r\n//         <ul>{this.moves.map((move, index) => {\r\n//             return (\r\n//                 <li key={index} >\r\n//                     <MovePreview move={move}/>\r\n//                 </li>\r\n//             )\r\n//         })}</ul>\r\n//     )\r\n// }\r\n\r\n// export default MovesList\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div className=\"move-list\">\r\n      <h2 className=\"text-light title\">Your Last {props.moves.length} {props.moves.length > 1?'Moves': 'Move'}:</h2>\r\n      <div className=\"move-list-container\">\r\n        {props.moves.map((move, index) => (\r\n          <li key={index} >\r\n            <MovePreview title={props.title} move={move} />\r\n          </li>\r\n        ))}\r\n        <ChartForMoves refProp={props.refProp} allMoves={props.moves}/>  \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react'\r\n\r\nimport { UserService } from '../services/UserService'\r\nimport { BitcoinService } from '../services/BitcoinService'\r\n\r\nimport MovesList from '../cmps/MovesList'\r\n\r\nexport default class HomePage extends Component {\r\n    componentDidMount() {\r\n        // eventBus.on('selectId',\r\n        //     (id) => {\r\n        //         console.log('hi');\r\n                \r\n        //     }\r\n        // )\r\n        window.scrollTo(0,0)\r\n        var user = UserService.getUser()\r\n        if (!user) this.props.history.push('/signup')\r\n        this.setState({ user: UserService.getUser() })\r\n        this.getRate()\r\n    }\r\n    state = { user: {}, rate: null }\r\n    getRate = async () => {\r\n        var rate = await BitcoinService.getRate()\r\n        this.setState({ rate: rate })\r\n    }\r\n    render() {\r\n        var USD = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n        });\r\n\r\n        var moves = [];\r\n        var { user, rate } = this.state\r\n        if (user.moves && rate) {\r\n            moves = user.moves.splice(0, 3)\r\n            moves.map(move => move.formatUSD = USD.format(move.amount * (1 / rate)))\r\n        }\r\n        const coins = user.coins ? user.coins.toFixed(4) : '';\r\n        return (\r\n            <div className=\"home-page width-container\">\r\n                <div className=\"container-inside flex col j-center\">\r\n                    <h1>Hi, {user.name}</h1>\r\n                    <section className=\"currency-container flex bet col\">\r\n                        <section className=\"current-balance\">\r\n                            <h2 className=\"text-light title\">Current balance</h2>\r\n                            <h2 className=\"flex a-center\">\r\n                                bit:\r\n                                <img className=\"bitcoin-currency\" src={require('../assets/svg/bitcoin-logo.svg')} alt=\"B\" />\r\n                                <span className=\"number\">{coins}</span>\r\n                            </h2>\r\n                            <h2>USD: {USD.format((user.coins * (1 / rate)).toFixed(2))}</h2>\r\n                        </section>\r\n                        <section className=\"current-btc\">\r\n                            <h2 className=\"text-light title\">Current BTC USD</h2>\r\n                            <p> {USD.format((1 / rate).toFixed(2))}</p>\r\n                        </section>\r\n                    </section>\r\n                    <section className=\"moves-container\">\r\n                        {moves.length ? <MovesList title={true} moves={moves} /> : <h2 className=\"msg-no-action\">No actions were taken into account</h2>}\r\n                    </section>\r\n                </div>\r\n                <div className=\"bitcoin-img-container width-container\">\r\n                    <img className=\"bitcoin-img\" src={require('../assets/svg/bitcoin.svg')} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length=5) {\r\n    var text = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++)\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n    return text;\r\n}\r\n\r\nfunction makeLorem(length) {\r\n\r\n    var randStr = '';\r\n    while (randStr.length < length) {\r\n        var wordLength = getRandomInt(3, 6);\r\n        var word = _createWord(wordLength);\r\n\r\n        if (Math.random() > 0.9) word += ',';\r\n\r\n        randStr += word + ' ';\r\n    }\r\n    randStr = randStr.substring(0, length);\r\n    randStr = randStr[0].toUpperCase() + randStr.substr(1)\r\n\r\n    return randStr;\r\n}\r\n\r\nfunction _getRandChar() {\r\n    var LETTERS = 'abcdefghijklmnopqrstuvwxyz';\r\n    var randIndex = parseInt(Math.random() * LETTERS.length)\r\n    return LETTERS.charAt(randIndex);\r\n}\r\n\r\nfunction _createWord(length) {\r\n    var word = '';\r\n    while (word.length < length) {\r\n        var randChar = _getRandChar();\r\n        word += randChar;\r\n    }\r\n\r\n    return word;\r\n}\r\n\r\nconst urlParams = new URLSearchParams(window.location.search);\r\nconst myParam = urlParams.get('myParam');\r\nfunction getParameterByName(name, url) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n    results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n\r\nfunction sort(arr) {\r\n    return arr.sort( (a, b) => {\r\n      if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n        return -1;\r\n      }\r\n      if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n        return 1;\r\n      }\r\n  \r\n      return 0;\r\n    })\r\n  }\r\n\r\nexport const UtilService = {\r\n    getRandomInt,\r\n    makeLorem,\r\n    makeId,\r\n    getParameterByName,\r\n    sort\r\n}\r\n","import { UtilService } from \"./UtilService\";\nimport { StorageService } from \"./StorageService\";\n\nconst CONTACTS_DB = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\", \n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\", \n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\", \n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\", \n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\", \n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\", \n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\", \n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\", \n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\", \n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\", \n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\", \n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\", \n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n \n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\", \n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\", \n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\", \n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\", \n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\", \n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\nconst KEY_CONTACTS = 'contacts'\n\nfunction getContacts (filterBy = null) {\n  return new Promise((resolve, reject) => { \n    const contacts = StorageService.load(KEY_CONTACTS)\n    var contactsToReturn = (contacts)? contacts: CONTACTS_DB;\n    StorageService.store(KEY_CONTACTS, contactsToReturn)\n    if (filterBy && filterBy.term) {\n      contactsToReturn = filter(filterBy.term)\n    }\n    resolve(UtilService.sort(contactsToReturn))\n  })\n}\n\nfunction getContactById (id) {\n    return new Promise((resolve, reject) => {\n      const contacts = StorageService.load(KEY_CONTACTS)\n      const contact = contacts.find( contact => contact._id === id)\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n    })\n}\n\nfunction removeContact(id) {\n  return new Promise((resolve, reject) => { \n    const contacts = StorageService.load(KEY_CONTACTS)\n    const index = contacts.findIndex( contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n      StorageService.store(KEY_CONTACTS, contacts)\n    }\n\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => { \n    const contacts = StorageService.load(KEY_CONTACTS)\n    const index = contacts.findIndex( c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n      StorageService.store(KEY_CONTACTS, contacts)\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => { \n    const contacts = StorageService.load(KEY_CONTACTS)\n    contact._id = UtilService.makeId(10)\n    contacts.push(contact)\n    StorageService.store(KEY_CONTACTS, contacts)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter (term) {\n  const contacts = StorageService.load(KEY_CONTACTS)\n  term = term.toLocaleLowerCase()\n  return contacts.filter( contact => {\n    return contact.name.toLocaleLowerCase().includes(term) ||\n           contact.phone.toLocaleLowerCase().includes(term) ||\n           contact.email.toLocaleLowerCase().includes(term)\n  })\n}\n\nexport const ContactService = {\n  getContacts,\n  getContactById,\n  removeContact,\n  saveContact,\n  getEmptyContact\n}\n\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ContactPreview({ contact }) {\r\n    return (\r\n        <Link className=\"contact-preview flex a-center\" to={'/contact/' + contact._id} key={contact._id}>\r\n            <img\r\n                className=\"avatar avatar-s\"\r\n                // onLoad={(e)=>{ e.target.src=`${require(\"../assets/svg/loading.svg\")}`}}\r\n                // (https?:\\/\\/)?([1-9]\\d{0,3})\\.website\\.com\\/.*type=abc.adv=abc1234 \r\n                src={`http://robohash.org/${contact.name}.png`}\r\n                // src={`https://robohash.org/${contact.name}.png`}\r\n                onError={(e)=>{e.target.onerror = null; e.target.src=`${require(\"../assets/svg/user-profile.svg\")}`}}\r\n                // onError={(e)=>{e.target.onerror = null; e.target.src=`http://robohash.org/${contact.name}.png`}}\r\n                alt=\"\"\r\n            />\r\n            <ul className=\"flex col j-center\">\r\n                <li>{contact.name}</li>\r\n                {/* <li>{contact.email}</li> */}\r\n                <li>{contact.phone}</li>\r\n            </ul>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ContactPreview\r\n\r\n","import React from 'react'\r\nimport ContactPreview from './ContactPreview'\r\n\r\nfunction ContactList({ contacts }) {\r\n    return (\r\n        <ul className=\"contact-list\">{contacts.map((contact, index) => {\r\n            return (\r\n                <li key={index} >\r\n                    <ContactPreview contact={contact} index={index} />\r\n                </li>\r\n            )\r\n        })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ContactList\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ContactFilter extends Component {\r\n    state = {\r\n        term: '',\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...props.filterBy };\r\n    }\r\n    onChangeHandler = (ev) => {\r\n        const { value, name } = ev.target;\r\n        this.setState({ [name]: value }, () => {\r\n            this.props.onFilter({ ...this.state });\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <form>\r\n                <input\r\n                    className=\"input-filter\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    onChange={this.onChangeHandler}\r\n                    name=\"term\"\r\n                    value={this.state.term}\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ContactService } from '../services/ContactService'\r\nimport { UserService } from '../services/UserService'\r\n\r\nimport ContactList from '../cmps/ContactList'\r\nimport ContactFilter from '../cmps/ContactFilter'\r\n\r\nexport default class ContactPage extends Component {\r\n    componentDidMount() {\r\n        window.scrollTo(0,0)\r\n        var user = UserService.getUser()\r\n        if (!user) this.props.history.push('/signup')\r\n        this.loadContacts();\r\n    }\r\n    loadContacts = async () => {\r\n        const contacts = await ContactService.getContacts(this.state.filterBy);\r\n        this.setState({ contacts: contacts });\r\n    };\r\n    state = {\r\n        contacts: [],\r\n        filterBy: {\r\n            term: '',\r\n        },\r\n    }\r\n    onFilterHandler = (filterBy) => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                filterBy: {\r\n                    ...prevState.filterBy,\r\n                    ...filterBy,\r\n                },\r\n            };\r\n        }, this.loadContacts);\r\n    };\r\n    render() {\r\n        const { contacts } = this.state\r\n        return (\r\n            <div className=\"contact-page width-container\">\r\n                <ContactFilter\r\n                    filterBy={this.state.filterBy}\r\n                    onFilter={this.onFilterHandler}\r\n                />\r\n                <div className=\"width-container\">\r\n                <Link  to=\"/contact/edit\">\r\n                    <img className=\"add-contact-btn\" src={require('../assets/svg/add-friend.svg')} alt=\"img\"/>\r\n                    {/* <button >Add new contact</button> */}\r\n                </Link>\r\n                </div>\r\n                <ContactList contacts={contacts} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TransferFund extends Component {\r\n    componentDidMount() {\r\n        this.setState({ contact: this.props.contact, maxCoins: this.props.maxCoins })\r\n    }\r\n    state = { contact: {}, maxCoins: null, amount: 0 }\r\n    setAmount = (ev) => {\r\n        if (ev.target.value >= this.maxCoins){\r\n            console.log(`${this.maxCoins} is the maximum you can afford`)\r\n            return\r\n        } \r\n        this.setState({ amount: ev.target.value })\r\n    }\r\n    render() {\r\n        const { contact, maxCoins } = this.state\r\n        return (\r\n            <div className=\"transfer-fund\">\r\n                <div>\r\n                    <h2 className=\"text-light\">Transfer coin to <span>{contact.name}</span>:</h2>\r\n                    <div className=\"flex col\">\r\n                        <input type=\"number\" value={this.state.amount} onChange={this.setAmount} min=\"0\" max={maxCoins} />\r\n                        <button className=\"btn-send flex bet a-center\" onClick={() => {\r\n                            this.props.onTransferCoins(this.state.amount)\r\n                            this.setState({ amount: 0 })\r\n                        }}\r\n                        >\r\n                            Send\r\n                            <img className=\"send-svg btn-img\" src={require('../assets/svg/send.svg')} alt=\"✏\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ContactService } from '../services/ContactService'\r\nimport { UserService } from '../services/UserService';\r\nimport { BitcoinService } from '../services/BitcoinService'\r\n\r\nimport TransferFund from '../cmps/TransferFund';\r\nimport MovesList from '../cmps/MovesList';\r\n\r\nexport default class ContactDetailsPage extends Component {\r\n    state = {\r\n        contact: null,\r\n        user: {},\r\n        rate: null\r\n    };\r\n    constructor(props) {\r\n        super(props)\r\n        this.myRef = React.createRef()\r\n    }\r\n    async componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n        const id = this.props.match.params.id;\r\n        const contact = await ContactService.getContactById(id);\r\n        this.setState({ contact, user: UserService.getUser() });\r\n        this.getRate()\r\n    }\r\n    getRate = async () => {\r\n        var rate = await BitcoinService.getRate()\r\n        this.setState({ rate: rate })\r\n    }\r\n    onTransferCoins = (amount) => {\r\n        const user = UserService.addMove(this.state.contact, amount)\r\n        this.setState({ user })\r\n        window.scrollTo(0, (this.myRef.current.offsetTop + this.myRef.current.offsetHeight))\r\n    }\r\n\r\n    render() {\r\n        var formatter = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n        });\r\n        const { contact, user, rate } = this.state\r\n        if (!contact) {\r\n            return <img src={require('../assets/svg/loading.svg')} alt=\"Loading\" />\r\n        }\r\n        var moves\r\n        if (rate) {\r\n            moves = user.moves.filter(move => move.toId === this.state.contact._id)\r\n            moves.map(move => move.formatUSD = formatter.format(move.amount * (1 / rate)))\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"contact-details width-container\">\r\n                <div className=\"contact-details-inside flex col a-center evenly\">\r\n                    <div className=\"link-container flex col a-center bet\">\r\n                        <Link to=\"/contact\">\r\n                            <img src={require('../assets/svg/go-back.svg')} alt=\"↻\" title=\"Go to list\" />\r\n                        </Link>\r\n                        <Link to={'/contact/edit/' + contact._id}>\r\n                            <img src={require('../assets/svg/pen.svg')} alt=\"✏\" title=\"Edit contact\" />\r\n                        </Link>\r\n                    </div>\r\n                    <img\r\n                        className=\"avatar avatar-l\"\r\n                        src={`http://robohash.org/${contact.name}.png`}\r\n                        onError={(e) => { e.target.onerror = null; e.target.src = `${require(\"../assets/svg/user-profile.svg\")}` }}\r\n                        // onError={(e)=>{e.target.onerror = null; e.target.src=`http://robohash.org/${contact.name}.png`}}\r\n                        alt=\"\"\r\n                    />\r\n                    <ul className=\"contact-details\">\r\n                        <li>{contact.name}</li>\r\n                        <li>{contact.email}</li>\r\n                        <li>{contact.phone}</li>\r\n                    </ul>\r\n                </div>\r\n                <TransferFund contact={contact} maxCoins={user.coins} onTransferCoins={this.onTransferCoins} />\r\n                {moves && moves.length ? <MovesList refProp={this.myRef} title={false} moves={moves} /> : <h3 className=\"msg-no-action\">No actions were taken into account</h3>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\n\r\nexport default class Input extends Component {\r\n    state = {\r\n        term: '',\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...props.value };\r\n    }\r\n    onChangeHandler = (ev) => {\r\n        const { value, name } = ev.target;\r\n        this.setState({ [name]: value }, () => {\r\n            this.props.onInput({ ...this.state });\r\n        });\r\n    };\r\n    render() {\r\n        const {name} = this.props\r\n        return (\r\n            <form>\r\n                {/* <h3>{name.charAt(0).toUpperCase() + name.substring(1) + ': '}</h3> */}\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={name.charAt(0).toUpperCase() + name.substring(1) + '...'}\r\n                    onChange={this.onChangeHandler}\r\n                    name={name}\r\n                    value={this.props.value}\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { ContactService } from '../services/ContactService'\r\n\r\nimport Input from '../cmps/Input'\r\n\r\nexport default class ContactEditPage extends Component {\r\n    state = { contact: { name: '', email: '', phone: '' } }\r\n\r\n    async componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n        const id = this.props.match.params.id;\r\n        if (id) {\r\n            const contact = await ContactService.getContactById(id);\r\n            this.setState({ contact });\r\n        }\r\n    }\r\n\r\n    onInputHandler = (value) => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    ...value,\r\n                },\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n    saveContact = async _ => {\r\n        const contact = await ContactService.saveContact(this.state.contact)\r\n        console.log(contact, 'added/updated contact')\r\n        this.props.history.push('/contact');\r\n    }\r\n\r\n    onRemoveContantHandler = async (id) => {\r\n        const contacts = await ContactService.removeContact(id)\r\n        this.props.history.push('/contact');\r\n    }\r\n\r\n    onGoBack = () => {\r\n        this.props.history.go(-1)\r\n    }\r\n    render() {\r\n        const { name, email, phone } = this.state.contact;\r\n        return (\r\n            <div className=\"contact-edit width-container flex col a-center evenly\">\r\n                <div className=\"btn-side-container flex col a-center bet\">\r\n                    <img onClick={this.onGoBack} src={require('../assets/svg/go-back.svg')} alt=\"↻\" title=\"Go Back\" />\r\n                    {\r\n                        (this.state.contact._id) ?\r\n                            <img onClick={() => this.onRemoveContantHandler(this.state.contact._id)} src={require('../assets/svg/bin.svg')} alt=\"🗑\" title=\"Delete Contant\" />\r\n                            : ''\r\n                    }\r\n                </div>\r\n                <img\r\n                    className=\"avatar avatar-l\"\r\n                    src={`http://robohash.org/${name}.png`}\r\n                    onError={(e) => { e.target.onerror = null; e.target.src = `${require(\"../assets/svg/user-profile.svg\")}` }}\r\n                    // onError={(e)=>{e.target.onerror = null; e.target.src=`http://robohash.org/${name}.png`}}\r\n                    alt=\"\"\r\n                />\r\n                <div className=\"input-containet\">\r\n                    <Input\r\n                        value={name}\r\n                        name=\"name\"\r\n                        onInput={this.onInputHandler}\r\n                    />\r\n                    <Input\r\n                        value={email}\r\n                        name=\"email\"\r\n                        onInput={this.onInputHandler}\r\n                    />\r\n                    <Input\r\n                        value={phone}\r\n                        name=\"phone\"\r\n                        onInput={this.onInputHandler}\r\n                    />\r\n                    <button onClick={this.saveContact}>Save</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nexport default class MyChart extends Component {\r\n    render() {\r\n        const { value, color } = this.props\r\n        var data,title,hAxis, vAxis;\r\n        if (value) {\r\n            title = value.description\r\n            data = value.values.map(value => {\r\n                return [new Date(value.x * 1000),\r\n                +value.y]\r\n            })\r\n            data.unshift([{ type: 'date', label: 'Time' },\r\n            value.name])\r\n            hAxis = {\r\n                title: `Time (per 5 month)`,\r\n                titleTextStyle: { fontSize: 18 }\r\n            }\r\n            vAxis = {\r\n                title: value.unit,\r\n                titleTextStyle: { fontSize: 18 }\r\n            }\r\n        }\r\n        const loader=<img src={require('../assets/svg/loading.svg')} alt=\"Loading\" />\r\n        return (\r\n            <div>\r\n                <Chart\r\n                    className=\"chart\"\r\n                    width={'100%'}\r\n                    height={'400px'}\r\n                    chartType=\"AreaChart\"\r\n                    loader={loader}\r\n                    data={data}\r\n                    options={{\r\n                        titleTextStyle: { fontSize: 22 },\r\n                        title,\r\n                        hAxis,\r\n                        vAxis,\r\n                        colors: [color],\r\n                        // legend: \"none\",\r\n                        animation: {\r\n                            startup: true,\r\n                            easing: 'linear',\r\n                            duration: 1500,\r\n                        },\r\n                    }}\r\n                    rootProps={{ 'data-testid': '1' }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { BitcoinService } from '../services/BitcoinService'\r\nimport { UserService } from '../services/UserService'\r\n\r\nimport MyChart from '../cmps/MyChart'\r\n\r\nexport default class StatisticPage extends Component {\r\n  state = { marketPrice: null, tradeVolume: null, avgBlockSize: null, nTransactions: null }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0)\r\n    var user = UserService.getUser()\r\n    if (!user) this.props.history.push('/signup')\r\n    this.getMarketPrice()\r\n    this.getTradeVolume()\r\n    this.getAvgBlockSize()\r\n    this.getNTransactions()\r\n  }\r\n  getNTransactions = async () => {\r\n    const nTransactions = await BitcoinService.getNTransactions();\r\n    this.setState({ nTransactions })\r\n  }\r\n  getMarketPrice = async () => {\r\n    const marketPrice = await BitcoinService.getMarketPrice();\r\n    this.setState({ marketPrice })\r\n  }\r\n  getTradeVolume = async () => {\r\n    const tradeVolume = await BitcoinService.getTradeVolume();\r\n    this.setState({ tradeVolume })\r\n  }\r\n  getAvgBlockSize = async () => {\r\n    const avgBlockSize = await BitcoinService.getAvgBlockSize();\r\n    this.setState({ avgBlockSize })\r\n  }\r\n  render() {\r\n    const { marketPrice, tradeVolume, avgBlockSize, nTransactions } = this.state\r\n    return (\r\n      <div className=\"width-container\">\r\n        <h1>Statistics</h1>\r\n        <div className=\"chart-container\">\r\n          <MyChart value={marketPrice} color={'rgb(150, 44, 44)'} />\r\n          <MyChart value={tradeVolume} color={'#bed4ff'} />\r\n          <MyChart value={avgBlockSize} color={'rgb(253, 132, 132)'} />\r\n          <MyChart value={nTransactions} color={'rgb(172, 255, 139)'} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { UserService } from '../services/UserService'\r\n\r\n\r\nexport default class SignupPage extends Component {\r\n    state = { name: '' }\r\n    componentDidMount() {\r\n        window.scrollTo(0,0)\r\n    }\r\n    setName = (ev) => {\r\n        this.setState({ name: ev.target.value })\r\n    }\r\n    signUp = async (event) => {\r\n        // console.log(event.key);\r\n        \r\n        var user = await UserService.signUp(this.state.name)\r\n        if (user) this.props.history.push('/')\r\n    }\r\n    handleKeyPress = (event) => {\r\n        console.log('hi');\r\n        \r\n        if(event.key === 'Enter'){\r\n          console.log('enter press here! ')\r\n        }\r\n      }\r\n    render() {\r\n        return (\r\n            <div className=\"sign-up\">\r\n                <img className=\"bitcoin-img\" src={require('../assets/svg/bitcoin.svg')} alt=\"\" />\r\n                {/* <img className=\"gif-img\" src={require('../assets/gif/tenor1.gif')} alt=\"\" /> */}\r\n\r\n                <h2>Please enter your name</h2>\r\n                <form>\r\n                    <input value={this.state.name} required type=\"text\" onChange={this.setName} placeholder=\"Your name..\"/>\r\n                    <button onClick={this.signUp} type=\"submit\"  onKeyPress={this.handleKeyPress}>Sign-up</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\n\r\nexport default class NavBar extends Component {\r\n  state = { isOpen: false, isOnLine: null,  id: null }\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n  }\r\n  componentDidMount() {\r\n    // const id = this.props.match.params.id;\r\n    // this.setId(id)\r\n    var isOnLine;\r\n    if (navigator.onLine) {\r\n      isOnLine = true\r\n    } else {\r\n      isOnLine = false\r\n    }\r\n    this.setState({isOnLine})\r\n    window.addEventListener('offline',(e) => { this.setState({isOnLine: false}) });\r\n    window.addEventListener('online', (e) => { this.setState({isOnLine: true})});\r\n    document.addEventListener(\"click\", this.handleClick)\r\n    document.addEventListener(\"keydown\", this.handlePress)\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"click\", this.handleClick)\r\n    document.removeEventListener(\"keydown\", this.handlePress)\r\n    window.removeEventListener('offline', (e) => { this.setState({isOnLine: false}) });\r\n    window.removeEventListener('online', (e) => { this.setState({isOnLine: true}) });\r\n  }\r\n  setId = (id) => {\r\n    this.setState({ id});\r\n  }\r\n  handleClick = (event) => {\r\n    if (!this.state.isOpen) return\r\n    this.toogleMemu()\r\n  }\r\n  handlePress = (event) => {\r\n    if (event.keyCode === 27) {\r\n      this.handleClick();\r\n    }\r\n  }\r\n  \r\n  toogleMemu = (event) => {\r\n    setTimeout(()=> {\r\n      this.setState({ isOpen: !this.state.isOpen })\r\n      document.body.classList.toggle('menu-open');\r\n    },1)\r\n  }\r\n  render() {\r\n    const { isOpen, isOnLine } = this.state\r\n    const openMenu = isOpen ? ' open-menu' : '';\r\n    const offLine = isOnLine ? '' : ' off-line' \r\n    return (\r\n      <div className={\"nav-bar-container\" + offLine}>\r\n        <nav className=\"width-container nav-bar flex bet\">\r\n          <Link className=\"bitcoin-menu\" title=\"Home\" to=\"/\"><img src={require('../assets/svg/bitcoin-menu.svg')} alt=\"\" /><span>Miss-Bitcoin.</span></Link>\r\n          <div className={\"nav-link-container flex col\" + openMenu}>\r\n            <NavLink title=\"Home\" activeClassName=\"active\" exact to=\"/\"><img className=\"btn-img\" src={require('../assets/svg/homepage.svg')} alt=\"\" /><span>Home</span> </NavLink>\r\n            <NavLink title=\"Contacts\" activeClassName=\"active\" exact to=\"/contact\"><img className=\"btn-img\" src={require('../assets/svg/user.svg')} alt=\"\" /> <span>Contacts</span></NavLink>\r\n            <NavLink title=\"Statistics\" activeClassName=\"active\" exact to=\"/statistic\"><img className=\"btn-img\" src={require('../assets/svg/line-chart.svg')} alt=\"\" /> <span>Statistics</span></NavLink>\r\n            <NavLink title=\"Sign-Up\" activeClassName=\"active\" exact to=\"/signup\"><img className=\"btn-img\" src={require('../assets/svg/log-in.svg')} alt=\"\" /> <span>Sign-Up</span></NavLink>\r\n          </div>\r\n          <img onClick={this.toogleMemu} className={\"hamburger\" + openMenu} src={require('../assets/svg/menu.svg')} alt=\"\" />\r\n        </nav>\r\n      </div>\r\n    );\r\n  };\r\n\r\n}\r\n","import React from 'react';\n// import Moment from 'react-moment';\n\nimport { createBrowserHistory } from 'history';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './styles/global.scss'\n\nimport HomePage from './pages/HomePage'\nimport ContactPage from './pages/ContactPage'\nimport ContactDetailsPage from './pages/ContactDetailsPage'\nimport ContactEditPage from './pages/ContactEditPage'\nimport StatisticPage from './pages/StatisticPage'\nimport SignupPage from './pages/SignupPage'\n\nimport NavBar from './cmps/NavBar'\n\nconst history = createBrowserHistory();\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"screen\"></div>\n        <Router history={history}>\n          <NavBar />\n          <main>\n            <Switch>\n              <Route path=\"/\" exact component={HomePage} />\n              <Route path=\"/contact\" exact component={ContactPage} />\n              <Route path=\"/contact/edit/:id?\" component={ContactEditPage} />\n              <Route path=\"/contact/:id\" component={ContactDetailsPage} />\n              <Route path=\"/statistic\" component={StatisticPage} />\n              <Route path=\"/signup\" component={SignupPage} />\n            </Switch>\n          </main>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.register();\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  console.log('beforeinstallprompt event has fired')\n  e.prompt()\n});"],"sourceRoot":""}